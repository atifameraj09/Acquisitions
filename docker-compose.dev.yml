version: '3.8'

services:
  # PostgreSQL database for development (replacing Neon Local)
  neon-local:
    image: postgres:15-alpine
    container_name: neon-local-proxy
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: neondb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      # Persist database data
      - neon_local_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d neondb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Application service for development
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: acquisitions-app-dev
    ports:
      - "${PORT:-3000}:3000"
    env_file:
      - .env.development
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      # Mount logs directory
      - ./logs:/app/logs
    depends_on:
      neon-local:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Optional: Database management tool for development
  adminer:
    image: adminer:latest
    container_name: db-admin-dev
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=neon-local
    depends_on:
      - neon-local
    networks:
      - app-network
    profiles:
      - tools

networks:
  app-network:
    driver: bridge
    name: acquisitions-dev-network

volumes:
  neon_local_data:
    name: neon_local_development_data